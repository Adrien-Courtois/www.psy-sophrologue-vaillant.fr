---
import { Image } from "astro:assets";
const {
  members: { title, description, member_list, sections, button },
} = Astro.props;
---

<section class="section">
  <div class="container">
    <div class="row">
      <div class="mx-auto text-center lg:col-6">
        <h2>{title}</h2>
        <p class="mt-4">
          {description}
        </p>
        {(button && 
        <a href={button.link} class="flex justify-center items-center mt-4 -mx-1 text-sm text-primary capitalize transition-colors duration-300 transform dark:text-blue-400 hover:underline hover:text-blue-600 dark:hover:text-primary">
            <span class="mx-1">{button.label}</span>
          <svg class="w-4 h-4 mx-1 rtl:-scale-x-100" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h31.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
        </a>
        )}
      </div>
    </div>
    <div class="row mt-12 justify-center">
      <div class="lg:col-10">
        <div class="flex justify-center flex-wrap gap-12">
          {
            member_list.map((item: any) => (
              <div class="mb-6 flex flex-col px-8 text-center sm:items-center rounded-xl bg-white py-8 shadow-lg">
                <div class="member-avatar inline-flex justify-center">
                  <Image
                    height={112}
                    width={112}
                    class="rouded-full h-28 w-28"
                    src={item.image}
                    alt={item.name}
                  />
                </div>
                <span class="pt-4 font-primary text-dark font-bold text-xl">{item.name}</span>
                <p class="mt-1.5">{item.field}</p>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
  {
    (sections && sections.map((item: any, index: number) => (
      <div class="container mt-8 xl:mt-12">
        <h3 class={`pb-6 ${index % 2 === 1 ? "lg:text-end" : ""}`}>{item.title}</h3>
        <div class="grid grid-cols-1 gap-8 lg:grid-cols-2">
          {item.paragraphs.map((paragraph: any) => (
            <p>{paragraph}</p>
          ))}
          {(item.link && 
            <a href={item.link} class="flex items-center -mx-1 text-sm text-primary capitalize transition-colors duration-300 transform dark:text-blue-400 hover:underline hover:text-blue-600 dark:hover:text-primary">
              <span class="mx-1">En savoir plus</span>
              <svg class="w-4 h-4 mx-1 rtl:-scale-x-100" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h31.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
            </a>
          )}
        </div>
      </div>
    )))
  }
</section>
